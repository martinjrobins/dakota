Blurb::
Strategy to run multiple instances of an optimization method
Description::
In the multi-start iteration strategy (\c multi_start), a series of
iterator runs are performed for different values of parameters in the
model. A common use is for multi-start optimization (i.e., different
local optimization runs from different starting points for the design
variables), but the concept and the code are more general. An
important feature is that these iterator runs may be performed
concurrently.

The \c multi_start strategy must specify an iterator using 
\c method_pointer. This iterator is responsible for completing 
a series of iterative analyses from a set of different starting points.

Starting points can be specified as follows: 
-# using \c random_starts, 
   for which the specified number of starting points are selected randomly 
   within the variable bounds
-# using \c starting_points, in which the 
   starting values are provided in a list
-# using both \c random_starts 
   and \c starting_points, for which the combined set of points will be used.
-* In aggregate, at least one starting point must be specified.

The most common example of a multi-start strategy is multi-start optimization, 
in which a series of optimizations are performed from different starting 
values for the design variables. This can be an effective approach for 
problems with multiple minima. 


Topics::	not_yet_reviewed
Examples::
A \c multi_start example specification is:
\verbatim
strategy,
	multi_start
	 method_pointer = 'NLP1'
	 random_starts = 10
\endverbatim


Theory::
Faq::
See_Also::	
