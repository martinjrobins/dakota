Blurb::
Determine how Dakota schedules jobs, when Dakota runs in serial
Description::
When performing asynchronous local evaluations, the local evaluation
scheduling keywords control how new evaluation jobs are dispatched
when one completes. If \c local_evaluation_self_scheduling (default)
is specified, each completed evaluation will be replaced by the next
in the local evaluation queue. If \c
local_evaluation_static_scheduling is specified, each completed
evaluation will be replaced by an evaluation number congruent modulo
the \c evaluation_concurrency. This is helpful for relative node
scheduling as described in \c Dakota/examples/parallelism. For
example, assuming only local concurrency (no MPI), if the local
concurrency is 7 and job 2 completes, it will be replaced with job 9.
This can result in idle processors if runtimes are non-uniform.

Topics:: problem, concurrency_and_parallelism
Examples::
Theory::
Faq::
See_Also::	

