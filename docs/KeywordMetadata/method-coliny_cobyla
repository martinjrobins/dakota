Blurb::
Constrained Optimization BY Linear Approximations (COBYLA)
Description::
The Constrained Optimization BY Linear Approximations (COBYLA)
algorithm is an extension to the Nelder-Mead simplex algorithm for
handling general linear/nonlinear constraints and is invoked using the
\c coliny_cobyla group specification. The COBYLA algorithm employs
linear approximations to the objective and constraint functions, the
approximations being formed by linear interpolation at N+1 points in
the space of the variables. We regard these interpolation points as
vertices of a simplex. The step length parameter controls the size of
the simplex and it is reduced automatically from \c initial_delta to
\c threshold_delta. One advantage that COBYLA has over many of its
competitors is that it treats each constraint individually when
calculating a change to the variables, instead of lumping the
constraints together into a single penalty function.

<b> See the page \ref topic-package_scolib for important information
regarding all SCOLIB methods </b>

\c coliny_cobyla is inherently serial.

<b> Stopping Critieria </b>

COBYLA currently only supports termination based on
 \li \ref method-coliny_cobyla-max_function_evaluations
 \li \ref method-coliny_cobyla-solution_target

Other method-independent stopping criteria (\c max_iterations and \c
convergence_tolerance) will be ignored if set.


Topics::	package_scolib, package_coliny, local_optimization_methods, constrained
Examples::
Theory::
Faq::
See_Also::	method-coliny_beta, method-coliny_direct, method-coliny_pattern_search, method-coliny_ea, method-coliny_solis_wets
